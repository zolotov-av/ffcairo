#ifndef AVC_ENCODER_H
#define AVC_ENCODER_H

#include <ffcairo/ffctypes.h>

/**
 * Энкодер медиа-потоков
 *
 * Класс-оболочка вокруг AVCodecContext для кодирования медиа
 *
 * @note Для упрощения класс не использует приватные члены и не обеспечивает
 *   безопасность. Пользователь может свободно читать и использовать любые поля,
 *   но не должен пытаться перераспределять объекты или данные внутри них.
 */
class AVCEncoder
{
public:
	
	/**
	 * Ссылка на контекст кодека
	 */
	AVCodecContext *avEncoder;
	
	/**
	 * Фрейм в который надо помещать кадр чтобы записать его в поток
	 */
	AVFrame *avFrame;
	
	/**
	 * Конструктор
	 */
	AVCEncoder();
	
	/**
	 * Деструктор
	 *
	 * Автоматически закрывает кодек и высобождает ресурсы, если кодек еще
	 * не был закрыт
	 */
	~AVCEncoder();
	
	/**
	 * Открыть кодек
	 */
	bool openVideoEncoder(const FFCVideoOptions *opts);
	
	/**
	 * Закрыть кодек и высвободить ресурсы
	 */
	void closeEncoder();
	
	/**
	 * Кодировать кадр хранящийся в avFrame
	 */
	bool encode();
	
	/**
	 * Кодировать кадр
	 */
	bool encode(AVFrame *frame);
	
	/**
	 * Завершить кодирование
	 */
	bool sendEof();
	
	/**
	 * Прочитать пакет
	 */
	bool readPacket(AVPacket *pkt, int *got_packet);
	
};

/**
 * Энкодер видео-потоков
 *
 * Класс-оболочка вокруг AVCodecContext для кодирования медиа
 *
 * TODO а может не нужен этот класс, а весь функционал можно уместить в AVEncoder
 *
 * @note Для упрощения класс не использует приватные члены и не обеспечивает
 *   безопасность. Пользователь может свободно читать и использовать любые поля,
 *   но не должен пытаться перераспределять объекты или данные внутри них.
 */
class AVCVideoEncoder: public AVCEncoder
{
public:
	
};

/**
 * Энкодер аудио-потоков
 *
 * Класс-оболочка вокруг AVCodecContext для кодирования медиа
 *
 * TODO а может не нужен этот класс, а весь функционал можно уместить в AVEncoder
 *
 * @note Для упрощения класс не использует приватные члены и не обеспечивает
 *   безопасность. Пользователь может свободно читать и использовать любые поля,
 *   но не должен пытаться перераспределять объекты или данные внутри них.
 */
class AVCAudioEncoder: public AVCEncoder
{
public:
	// TODO
};

#endif // AVC_ENCODER_H
