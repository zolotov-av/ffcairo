
Работа со временем и временными метками

Данный файл описывает соглашения по работе со временем в FFCairo и avc_server

== Предпосылки ==

NOTE:
  Доподлино всех предпосылок мне не известно, если кто знает и может хорошо
  рассказать - напишите на zolotov-alex@shamangrad.net

FFmpeg в качестве меток времени использует арифметику дробных чисел. Для
каждого потока определяется time_base - минимальная единица измерения времени.
Задается она в виде дроби num/den. На сколько я понимаю, авторы FFmpeg не сами
это придумали и подобная нотация используется в формате контейнеров и в
кодеках. Таким образом time_base является минимальным квантом времени который
может обработать контейнер/кодек/плеер.

Единого соглашения каким должен быть time_base нет, обычно он зависит от
частоты смены кадров или частоты дискретизации (от frame_rate/sample_rate).
В документации FFmpeg периодически имеются отсылки что time_base (для видео)
равен 1/frame_rate, однако на практике это не так, более того сам FFmpeg,
не полагается на time_base при определении frame_rate и вычисляет его прочитав
несколько фреймов из потока (делается это в функции avformat_find_stream_info().
Более того, time_base равный 1/frame_rate не всегда удобен, в частности бывают
случаи когда frame_rate непостоянный


== Единица измерения по умолчанию ==

Чтобы упростить расчеты, единица измерений времени в FFCairo будет
фиксированной. На первое время, в качестве единицы измерения мы возьмем 1мс,
что соответствует time_base=1/1000. Однако это не означает что в выходных
потоках будет задаваться это же время.

Почему: time_base равный 1мс удобен как для вычислений, так и для понимания
при отладке и расчетах вручную.

Сервер видеоконференций и его сопуствующие утилиты будут отслеживать время
в данной единице измерения и по необходимости конвертировать в/из других
форматов.

Чтобы выделить семантику в названии идентификаторов будем использовать имена
вроде mts (милли timestamp), ms/msec (милли секунда) и т.п.

== Переменный frame_rate ==

Сервер видеоконференций будет буферизовать, генерировать и обрабатывать видео,
возможно что будут возникать задержки из-за которых очередной кадр не может
быть выпущен ровно в указанный срок, возможно что кадр будет выпущен с некоторой
задержкой и время выпуска кадров сместиться или кадр будет пропущен, другими
словами как минимум внутренняя инфраструктура сервера должна уметь работать
с переменным frame_rate и по возможности должны использоваться кодеки которые
умеют работать с переменным frame_rate.

== Прыжки времени ==

Отсчет времени на компьютере не яввляется абсолютно точным, хотя на сегодняшний
день он уже не так плох как был когда-то. Тем не менее я все-таки допускаю что
ход времени на компьютере может оказаться нелинейным, возможна
рассинхронизация, возможно изменение времени вызыванное сменой сервера времени
или его (сервера времени) ошибок. Подобная рассинхронизация или прыжки времени
могут быть как на стороне сервера так и на стороне клиента. При этом кодеки
требуют чтобы метки времени как минимум увеличивались, в противном случае
возникает ошибка и кодирование прерывается.

Чтобы быть устойчивым к подобным проблемам я возможно введу свой отсчет времени
независимый от системного времени. Данная проблема требует отдельного
исследования, экспериментов и отладки.
